<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Life Is Real.</title><link href="https://liujuanjuan1984.github.io/" rel="alternate"/><link href="https://liujuanjuan1984.github.io/feeds/all.atom.xml" rel="self"/><id>https://liujuanjuan1984.github.io/</id><updated>2025-08-05T13:50:00+08:00</updated><entry><title>When AI Answers Everything, What's Left to Record?</title><link href="https://liujuanjuan1984.github.io/when-ai-answers-everything-whats-left-to-record.html" rel="alternate"/><published>2025-08-05T13:50:00+08:00</published><updated>2025-08-05T13:50:00+08:00</updated><author><name>Helen</name></author><id>tag:liujuanjuan1984.github.io,2025-08-05:/when-ai-answers-everything-whats-left-to-record.html</id><content type="html">&lt;h3&gt;当AI能解答一切，我们还需记录什么？&lt;/h3&gt;
&lt;p&gt;今天决定启用 Github Pages。&lt;/p&gt;
&lt;p&gt;当想要创建 Github Pages 时，将面临选择什么生成器的问题。Hugo(Go)，或 JekyII(Ruby,Pages原生支持)或 Next.js(React)等，都是 Gemini2.5 Pro 主动提及的选项。——我留意到，这些选项中没有 Python 便追问，有 Python 的生成器吗？AI 于是推荐了 Pelican/MkDocs/Nikola。既然只是试水，不想占用多少时间，我于是毫不费力地选用了 Pelican。&lt;/p&gt;
&lt;p&gt;如果追问，为什么是 Python，而不是其它编程语言的生成器？也许我只是不想为了本地预览站点，而往笔记本电脑中额外新装一种编程环境。况且，作为试水，任何一种 Github Pages 生成器都极有可能是够用的。&lt;/p&gt;
&lt;p&gt;为什么是 Github Pages，而不是博客/微博或推特等公共平台？排除公共平台于我而言很容易：我乐意公开的任何私人数据，我期望它对 api 完全友好，毫不受制于平台的内容政策。——譬如你试试爬取 x 的数据，或在不登陆的情况下访问某人最近动态。但我又想偷懒，不想要花钱买域名和托管服务器，而且我的能量也支撑不起在联邦宇宙中维系一颗孤立的站点星球……万语千言，github pages 在当下恰好够用。&lt;/p&gt;
&lt;p&gt;过去，我曾经做过一些个人站点的尝试，也曾经参与构建某种联邦宇宙的产品生态。现在，我并不是在追求塑造个人影响力。当前推动构建 Github Pages 的唯一动力是，我反复产生了一个疑问：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;当我们大量使用 ai 的时候，答案唾手可得；对于每个活人，在“个人知识管理”范畴，其思想与行为应当发生怎样的重塑？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;—— 把这个问题丢给 AI，当然可以得到特别成体系的，看上去合情合理的答案。&lt;/p&gt;
&lt;p&gt;那么，还有什么值得被记录？然后，记录对于记录者还有什么意义？再然后，分享记录，又将对谁、是否产生一些潜在的意义？&lt;/p&gt;
&lt;p&gt;于是，我开始创建 Github Pages 并偶尔分享一点记录，用以实践验证 AI 给出的答案。—— 它们太唾手可得了！&lt;/p&gt;
&lt;h3&gt;When AI Answers Everything, What's Left to Record?&lt;/h3&gt;
&lt;p&gt;(Translated by Gemini2.5 Pro)&lt;/p&gt;
&lt;p&gt;Today, I decided to start using GitHub Pages.&lt;/p&gt;
&lt;p&gt;When I wanted to create a site with GitHub Pages, I faced the question of which generator to choose. Gemini 2.5 Pro actively suggested options like Hugo (Go), Jekyll (Ruby, natively supported by Pages), and Next.js (React). I noticed Python was missing from the list, so I followed up: "Are there any Python generators?" The AI then recommended Pelican, MkDocs, and Nikola. Since this was just a trial run and I didn't want to invest much time, I went with Pelican—a straightforward choice.&lt;/p&gt;
&lt;p&gt;If you ask why Python instead of a generator from another programming language, perhaps it's just that I didn't want to install a whole new programming environment on my laptop merely to preview a local site. Besides, for a trial, any GitHub Pages generator would have likely been sufficient.&lt;/p&gt;
&lt;p&gt;So why GitHub Pages instead of a public platform like a blog, Weibo, or Twitter? For me, ruling out public platforms was easy. Any personal data I choose to make public, I expect to be fully API-friendly and free from the constraints of platform content policies. Just try scraping data from X, or viewing someone's recent updates without logging in.&lt;/p&gt;
&lt;p&gt;But I also wanted to take the easy route—no spending money on domains or hosting. And frankly, I don't have the energy to maintain a standalone presence in the Fediverse. After all is said and done, GitHub Pages is just right for now.&lt;/p&gt;
&lt;p&gt;I've experimented with personal sites in the past and even participated in building a product ecosystem within the Fediverse. But today, I'm not chasing personal influence. The sole motivation driving me to build this GitHub Pages site now is a question that I keep coming back to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;When we use AI so heavily that answers are always at our fingertips, how must our thoughts and behaviors be transformed in the realm of personal knowledge management?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, you can toss this question to an AI and get a very systematic, seemingly reasonable answer.&lt;/p&gt;
&lt;p&gt;So, what is still worth recording? And what meaning does the act of recording hold for the recorder? Furthermore, when these records are shared, who might they hold potential meaning for, if anyone?&lt;/p&gt;
&lt;p&gt;And so, I started this GitHub Pages site to occasionally share some records, as a way to practice and test the answers the AI provides.&lt;/p&gt;
&lt;p&gt;—Because they are just too easy to get.&lt;/p&gt;</content><category term="Digital Garden"/><category term="Pelican"/><category term="Python"/><category term="GitHub Pages"/><category term="AI"/><category term="PKM"/></entry></feed>